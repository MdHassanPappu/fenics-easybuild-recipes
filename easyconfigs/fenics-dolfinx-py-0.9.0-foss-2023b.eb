easyblock = 'PythonPackage'  

name = 'fenics-dolfinx-py'
version = '0.9.0'

homepage = 'https://github.com/FEniCS/dolfinx'
description = "DOLFINx is the computational environment of FEniCSx - python binding "

toolchain = {'name': 'foss', 'version': '2023b'}

source_urls = ['https://github.com/FEniCS/dolfinx/archive']
sources = ['v%(version)s.tar.gz']
checksums = ['b266c74360c2590c5745d74768c04568c965b44739becca4cd6b5aa58cdbbbd1']

builddependencies = [
    ('CMake', '3.27.6'),
    ('HDF5', '1.14.3'),
    ('fenics-dolfinx', '%(version)s'),
    ('make', '4.4.1'),
    ('nanobind', '2.5.0'),
    ('pkgconfig', '1.5.5','-python'),
    ('scikit-build-core', '0.10.7'),
    ('setuptools', '64.0.3'),  
]

dependencies = [
    ('PETSc', '3.22.5'),
    ('Python', '3.11.5'),
    ('SciPy-bundle','2023.11'),
    ('cffi', '1.15.1'),
    ('fenics-basix', '0.9.0'),
    ('fenics-basix-py', '0.9.0'),
    ('fenics-ffcx', '0.9.0'),
    ('fenics-ufl', '2024.2.0'),
    ('mpi4py', '3.1.5'),
    ('petsc4py','3.22.5'), 
    ('slepc4py','3.22.2'), 
]

install_src = './python'

options = {'modulename': 'dolfinx'}

sanity_check_paths = {
    'files': ['lib/python%(pyshortver)s/site-packages/dolfinx/__init__.py'],
    'dirs': ['lib/python%(pyshortver)s/site-packages/dolfinx'],
}


sanity_check_commands = [
    'mpirun -N 1 python -c "from mpi4py import MPI; import dolfinx"'
]

moduleclass = 'cae'
